#include "il2cpp-config.h"
#include "class-internals.h"
#include "codegen/il2cpp-codegen.h"
#include <cstring>
#include <string.h>
#include <stdio.h>
#ifndef _MSC_VER
#include <alloca.h>
#else
#include <malloc.h>
#endif
#include <cmath>
#include <limits>
#include <assert.h>
#include "stringLiterals.h"

extern TypeInfo U3CModuleU3E_t1815_il2cpp_TypeInfo;
// <Module>
#include "ICSharpCode_SharpZipLib_U3CModuleU3E.h"
extern TypeInfo SharpZipBaseException_t1816_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.SharpZipBaseException
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_SharpZipBase.h"
extern TypeInfo IChecksum_t1865_il2cpp_TypeInfo;
extern TypeInfo Adler32_t1818_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Checksums.Adler32
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Checksums_Ad.h"
extern TypeInfo Crc32_t1819_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Checksums.Crc32
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Checksums_Cr.h"
extern TypeInfo INameTransform_t1838_il2cpp_TypeInfo;
extern TypeInfo StreamUtils_t1820_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Core.StreamUtils
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Core_StreamU.h"
extern TypeInfo PkzipClassic_t1821_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Encryption.PkzipClassic
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Encryption_P.h"
extern TypeInfo PkzipClassicCryptoBase_t1822_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Encryption.PkzipClassicCryptoBase
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Encryption_P_0.h"
extern TypeInfo PkzipClassicEncryptCryptoTransform_t1823_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Encryption.PkzipClassicEncryptCryptoTransform
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Encryption_P_1.h"
extern TypeInfo PkzipClassicDecryptCryptoTransform_t1824_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Encryption.PkzipClassicDecryptCryptoTransform
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Encryption_P_2.h"
extern TypeInfo PkzipClassicManaged_t1825_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Encryption.PkzipClassicManaged
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Encryption_P_3.h"
extern TypeInfo InflaterInputStream_t1828_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_Compress.h"
extern TypeInfo InflaterInputBuffer_t1827_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_Compress_0.h"
extern TypeInfo OutputWindow_t1829_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.Compression.Streams.OutputWindow
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_Compress_1.h"
extern TypeInfo StreamManipulator_t1830_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.Compression.Streams.StreamManipulator
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_Compress_2.h"
extern TypeInfo DeflaterHuffman_t1831_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.Compression.DeflaterHuffman
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_Compress_3.h"
extern TypeInfo Inflater_t1826_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.Compression.Inflater
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_Compress_4.h"
extern TypeInfo InflaterDynHeader_t1832_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.Compression.InflaterDynHeader
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_Compress_5.h"
extern TypeInfo InflaterHuffmanTree_t1833_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.Compression.InflaterHuffmanTree
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_Compress_6.h"
extern TypeInfo IEntryFactory_t1850_il2cpp_TypeInfo;
extern TypeInfo UseZip64_t1834_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.UseZip64
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_UseZip64.h"
extern TypeInfo CompressionMethod_t1835_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.CompressionMethod
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_Compress_7.h"
extern TypeInfo ZipConstants_t1836_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.ZipConstants
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_ZipConst.h"
extern TypeInfo Known_t1837_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.ZipEntry/Known
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_ZipEntry_0.h"
extern TypeInfo ZipEntry_t856_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.ZipEntry
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_ZipEntry.h"
extern TypeInfo ZipEntryFactory_t1839_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.ZipEntryFactory
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_ZipEntry_1.h"
extern TypeInfo ZipException_t1840_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.ZipException
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_ZipExcep.h"
extern TypeInfo ZipExtraData_t1841_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.ZipExtraData
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_ZipExtra.h"
extern TypeInfo KeysRequiredEventArgs_t1842_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.KeysRequiredEventArgs
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_KeysRequ.h"
extern TypeInfo KeysRequiredEventHandler_t1843_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.ZipFile/KeysRequiredEventHandler
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_ZipFile_.h"
extern TypeInfo HeaderTest_t1844_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.ZipFile/HeaderTest
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_ZipFile__0.h"
extern TypeInfo ZipEntryEnumerator_t1846_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.ZipFile/ZipEntryEnumerator
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_ZipFile__1.h"
extern TypeInfo PartialInputStream_t1847_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.ZipFile/PartialInputStream
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_ZipFile__2.h"
extern TypeInfo ZipFile_t855_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.ZipFile
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_ZipFile.h"
extern TypeInfo IDynamicDataSource_t1849_il2cpp_TypeInfo;
extern TypeInfo IArchiveStorage_t1848_il2cpp_TypeInfo;
extern TypeInfo ZipHelperStream_t1851_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.ZipHelperStream
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_ZipHelpe.h"
extern TypeInfo ZipNameTransform_t1852_il2cpp_TypeInfo;
// ICSharpCode.SharpZipLib.Zip.ZipNameTransform
#include "ICSharpCode_SharpZipLib_ICSharpCode_SharpZipLib_Zip_ZipNameT.h"
extern TypeInfo __StaticArrayInitTypeSizeU3D1024_t1853_il2cpp_TypeInfo;
// <PrivateImplementationDetails>{6C7CFC05-3661-46A0-98AB-FC6F81793937}/__StaticArrayInitTypeSize=1024
#include "ICSharpCode_SharpZipLib_U3CPrivateImplementationDetailsU3EU7.h"
extern TypeInfo __StaticArrayInitTypeSizeU3D12_t1854_il2cpp_TypeInfo;
// <PrivateImplementationDetails>{6C7CFC05-3661-46A0-98AB-FC6F81793937}/__StaticArrayInitTypeSize=12
#include "ICSharpCode_SharpZipLib_U3CPrivateImplementationDetailsU3EU7_0.h"
extern TypeInfo __StaticArrayInitTypeSizeU3D76_t1855_il2cpp_TypeInfo;
// <PrivateImplementationDetails>{6C7CFC05-3661-46A0-98AB-FC6F81793937}/__StaticArrayInitTypeSize=76
#include "ICSharpCode_SharpZipLib_U3CPrivateImplementationDetailsU3EU7_1.h"
extern TypeInfo __StaticArrayInitTypeSizeU3D16_t1856_il2cpp_TypeInfo;
// <PrivateImplementationDetails>{6C7CFC05-3661-46A0-98AB-FC6F81793937}/__StaticArrayInitTypeSize=16
#include "ICSharpCode_SharpZipLib_U3CPrivateImplementationDetailsU3EU7_2.h"
extern TypeInfo __StaticArrayInitTypeSizeU3D116_t1857_il2cpp_TypeInfo;
// <PrivateImplementationDetails>{6C7CFC05-3661-46A0-98AB-FC6F81793937}/__StaticArrayInitTypeSize=116
#include "ICSharpCode_SharpZipLib_U3CPrivateImplementationDetailsU3EU7_3.h"
extern TypeInfo __StaticArrayInitTypeSizeU3D120_t1858_il2cpp_TypeInfo;
// <PrivateImplementationDetails>{6C7CFC05-3661-46A0-98AB-FC6F81793937}/__StaticArrayInitTypeSize=120
#include "ICSharpCode_SharpZipLib_U3CPrivateImplementationDetailsU3EU7_4.h"
extern TypeInfo U3CPrivateImplementationDetailsU3EU7B6C7CFC05U2D3661U2D46A0U2D98ABU2DFC6F81793937U7D_t1859_il2cpp_TypeInfo;
// <PrivateImplementationDetails>{6C7CFC05-3661-46A0-98AB-FC6F81793937}
#include "ICSharpCode_SharpZipLib_U3CPrivateImplementationDetailsU3EU7_5.h"
#include <map>
struct TypeInfo;
struct MethodInfo;
TypeInfo* g_ICSharpCode_SharpZipLib_Assembly_Types[47] = 
{
	&U3CModuleU3E_t1815_il2cpp_TypeInfo,
	&SharpZipBaseException_t1816_il2cpp_TypeInfo,
	&IChecksum_t1865_il2cpp_TypeInfo,
	&Adler32_t1818_il2cpp_TypeInfo,
	&Crc32_t1819_il2cpp_TypeInfo,
	&INameTransform_t1838_il2cpp_TypeInfo,
	&StreamUtils_t1820_il2cpp_TypeInfo,
	&PkzipClassic_t1821_il2cpp_TypeInfo,
	&PkzipClassicCryptoBase_t1822_il2cpp_TypeInfo,
	&PkzipClassicEncryptCryptoTransform_t1823_il2cpp_TypeInfo,
	&PkzipClassicDecryptCryptoTransform_t1824_il2cpp_TypeInfo,
	&PkzipClassicManaged_t1825_il2cpp_TypeInfo,
	&InflaterInputStream_t1828_il2cpp_TypeInfo,
	&InflaterInputBuffer_t1827_il2cpp_TypeInfo,
	&OutputWindow_t1829_il2cpp_TypeInfo,
	&StreamManipulator_t1830_il2cpp_TypeInfo,
	&DeflaterHuffman_t1831_il2cpp_TypeInfo,
	&Inflater_t1826_il2cpp_TypeInfo,
	&InflaterDynHeader_t1832_il2cpp_TypeInfo,
	&InflaterHuffmanTree_t1833_il2cpp_TypeInfo,
	&IEntryFactory_t1850_il2cpp_TypeInfo,
	&UseZip64_t1834_il2cpp_TypeInfo,
	&CompressionMethod_t1835_il2cpp_TypeInfo,
	&ZipConstants_t1836_il2cpp_TypeInfo,
	&Known_t1837_il2cpp_TypeInfo,
	&ZipEntry_t856_il2cpp_TypeInfo,
	&ZipEntryFactory_t1839_il2cpp_TypeInfo,
	&ZipException_t1840_il2cpp_TypeInfo,
	&ZipExtraData_t1841_il2cpp_TypeInfo,
	&KeysRequiredEventArgs_t1842_il2cpp_TypeInfo,
	&KeysRequiredEventHandler_t1843_il2cpp_TypeInfo,
	&HeaderTest_t1844_il2cpp_TypeInfo,
	&ZipEntryEnumerator_t1846_il2cpp_TypeInfo,
	&PartialInputStream_t1847_il2cpp_TypeInfo,
	&ZipFile_t855_il2cpp_TypeInfo,
	&IDynamicDataSource_t1849_il2cpp_TypeInfo,
	&IArchiveStorage_t1848_il2cpp_TypeInfo,
	&ZipHelperStream_t1851_il2cpp_TypeInfo,
	&ZipNameTransform_t1852_il2cpp_TypeInfo,
	&__StaticArrayInitTypeSizeU3D1024_t1853_il2cpp_TypeInfo,
	&__StaticArrayInitTypeSizeU3D12_t1854_il2cpp_TypeInfo,
	&__StaticArrayInitTypeSizeU3D76_t1855_il2cpp_TypeInfo,
	&__StaticArrayInitTypeSizeU3D16_t1856_il2cpp_TypeInfo,
	&__StaticArrayInitTypeSizeU3D116_t1857_il2cpp_TypeInfo,
	&__StaticArrayInitTypeSizeU3D120_t1858_il2cpp_TypeInfo,
	&U3CPrivateImplementationDetailsU3EU7B6C7CFC05U2D3661U2D46A0U2D98ABU2DFC6F81793937U7D_t1859_il2cpp_TypeInfo,
	NULL,
};
extern Il2CppImage g_ICSharpCode_SharpZipLib_dll_Image;
Il2CppAssembly g_ICSharpCode_SharpZipLib_Assembly = 
{
	{ "ICSharpCode.SharpZipLib", NULL, NULL, "\x0\x24\x0\x0\x4\x80\x0\x0\x94\x0\x0\x0\x6\x2\x0\x0\x0\x24\x0\x0\x52\x53\x41\x31\x0\x4\x0\x0\x1\x0\x1\x0\xB9\xA1\x4E\xA8\xFC\x9D\x75\x99\xE0\xE8\x2A\x12\x92\xA2\x31\x3\xF0\x21\xE\x2F\x92\x8A\xF\x46\x69\x63\xAF\x23\xFF\xFA\xDB\xA5\x9D\xCC\x8C\x9E\x26\xEC\xD1\x14\xD7\xC0\xB4\x17\x9E\x4B\xC9\x3B\x16\x56\xB7\xEE\x2D\x4A\x67\xDD\x7C\x19\x92\x65\x3E\xD\x9C\xC5\x34\xF7\x91\x4B\x6F\x58\x3B\x2\x2E\xA\x7A\xA8\xA4\x30\xF4\x7\x93\x2F\x9A\x68\x6\xF0\xFC\x64\xD6\x1E\x78\xD5\xAE\x1\xAA\x8F\x82\x33\x19\x67\x19\xD4\x4D\xA2\xC5\xA\x2D\x1C\xFA\x3F\x7A\xBB\x74\x87\xB3\x56\x7A\x4F\x4\x56\xAA\x66\x67\x15\x4C\x67\x49\xB1", { 0x1B, 0x03, 0xE6, 0xAC, 0xF1, 0x16, 0x4F, 0x73 }, 32772, 0, 1, 0, 85, 5, 452 },
	&g_ICSharpCode_SharpZipLib_dll_Image,
	1,
};
extern const CustomAttributesCacheGenerator g_ICSharpCode_SharpZipLib_Assembly_AttributeGenerators[6];
static const char* s_StringTable[145] = 
{
	"checksum",
	"CrcTable",
	"keys",
	"key_",
	"inf",
	"inputBuffer",
	"baseInputStream",
	"isClosed",
	"isStreamOwner",
	"rawLength",
	"rawData",
	"clearTextLength",
	"clearText",
	"available",
	"cryptoTransform",
	"inputStream",
	"window",
	"windowEnd",
	"windowFilled",
	"window_",
	"windowStart_",
	"windowEnd_",
	"buffer_",
	"bitsInBuffer_",
	"BL_ORDER",
	"bit4Reverse",
	"staticLCodes",
	"staticLLength",
	"staticDCodes",
	"staticDLength",
	"CPLENS",
	"CPLEXT",
	"CPDIST",
	"CPDEXT",
	"mode",
	"readAdler",
	"neededBits",
	"repLength",
	"repDist",
	"uncomprLen",
	"isLastBlock",
	"totalOut",
	"totalIn",
	"noHeader",
	"input",
	"outputWindow",
	"dynHeader",
	"litlenTree",
	"distTree",
	"adler",
	"repMin",
	"repBits",
	"blLens",
	"litdistLens",
	"blTree",
	"lnum",
	"dnum",
	"blnum",
	"num",
	"repSymbol",
	"lastLen",
	"ptr",
	"tree",
	"defLitLenTree",
	"defDistTree",
	"value__",
	"Off",
	"On",
	"Dynamic",
	"Stored",
	"Deflated",
	"Deflate64",
	"BZip2",
	"WinZipAES",
	"defaultCodePage",
	"None",
	"Size",
	"CompressedSize",
	"Crc",
	"Time",
	"ExternalAttributes",
	"known",
	"externalFileAttributes",
	"versionMadeBy",
	"name",
	"size",
	"compressedSize",
	"versionToExtract",
	"crc",
	"dosTime",
	"method",
	"extra",
	"comment",
	"flags",
	"zipFileIndex",
	"offset",
	"forceZip64_",
	"cryptoCheckValue_",
	"nameTransform_",
	"fixedDateTime_",
	"getAttributes_",
	"index_",
	"readValueStart_",
	"readValueLength_",
	"newEntry_",
	"data_",
	"fileName",
	"key",
	"Extract",
	"Header",
	"array",
	"index",
	"zipFile_",
	"baseStream_",
	"start_",
	"length_",
	"readPos_",
	"end_",
	"KeysRequired",
	"isDisposed_",
	"comment_",
	"offsetOfFirstEntry",
	"entries_",
	"isNewArchive_",
	"useZip64_",
	"updates_",
	"updateIndex_",
	"archiveStorage_",
	"updateDataSource_",
	"bufferSize_",
	"updateEntryFactory_",
	"isOwner_",
	"stream_",
	"InvalidEntryChars",
	"InvalidEntryCharsRelaxed",
	"$$method0x60004bc-1",
	"$$method0x600026e-1",
	"$$method0x600026e-2",
	"$$method0x60004c0-1",
	"$$method0x60004c0-2",
	"$$method0x60004c0-3",
	"$$method0x60004c0-4",
	"$$method0x60004c1-1",
	"$$method0x60004c1-2",
	"$$method0x60004c1-3",
};
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
static const Il2CppFieldDefinition s_FieldTable[153] = 
{
	{ 0, 1493, offsetof(Adler32_t1818, ___checksum_0), 0 } ,
	{ 1, 3649, offsetof(Crc32_t1819_StaticFields, ___CrcTable_0), 0 } ,
	{ 2, 2359, offsetof(PkzipClassicCryptoBase_t1822, ___keys_0), 0 } ,
	{ 3, 560, offsetof(PkzipClassicManaged_t1825, ___key__10), 0 } ,
	{ 4, 4190, offsetof(InflaterInputStream_t1828, ___inf_2), 0 } ,
	{ 5, 4191, offsetof(InflaterInputStream_t1828, ___inputBuffer_3), 0 } ,
	{ 6, 2840, offsetof(InflaterInputStream_t1828, ___baseInputStream_4), 0 } ,
	{ 7, 288, offsetof(InflaterInputStream_t1828, ___isClosed_5), 0 } ,
	{ 8, 288, offsetof(InflaterInputStream_t1828, ___isStreamOwner_6), 0 } ,
	{ 9, 273, offsetof(InflaterInputBuffer_t1827, ___rawLength_0), 0 } ,
	{ 10, 560, offsetof(InflaterInputBuffer_t1827, ___rawData_1), 0 } ,
	{ 11, 273, offsetof(InflaterInputBuffer_t1827, ___clearTextLength_2), 0 } ,
	{ 12, 560, offsetof(InflaterInputBuffer_t1827, ___clearText_3), 0 } ,
	{ 13, 273, offsetof(InflaterInputBuffer_t1827, ___available_4), 0 } ,
	{ 14, 2790, offsetof(InflaterInputBuffer_t1827, ___cryptoTransform_5), 0 } ,
	{ 15, 1836, offsetof(InflaterInputBuffer_t1827, ___inputStream_6), 0 } ,
	{ 16, 560, offsetof(OutputWindow_t1829, ___window_0), 0 } ,
	{ 17, 273, offsetof(OutputWindow_t1829, ___windowEnd_1), 0 } ,
	{ 18, 273, offsetof(OutputWindow_t1829, ___windowFilled_2), 0 } ,
	{ 19, 560, offsetof(StreamManipulator_t1830, ___window__0), 0 } ,
	{ 20, 273, offsetof(StreamManipulator_t1830, ___windowStart__1), 0 } ,
	{ 21, 273, offsetof(StreamManipulator_t1830, ___windowEnd__2), 0 } ,
	{ 22, 1493, offsetof(StreamManipulator_t1830, ___buffer__3), 0 } ,
	{ 23, 273, offsetof(StreamManipulator_t1830, ___bitsInBuffer__4), 0 } ,
	{ 24, 2389, offsetof(DeflaterHuffman_t1831_StaticFields, ___BL_ORDER_0), 0 } ,
	{ 25, 2705, offsetof(DeflaterHuffman_t1831_StaticFields, ___bit4Reverse_1), 0 } ,
	{ 26, 2123, offsetof(DeflaterHuffman_t1831_StaticFields, ___staticLCodes_2), 0 } ,
	{ 27, 1296, offsetof(DeflaterHuffman_t1831_StaticFields, ___staticLLength_3), 0 } ,
	{ 28, 2123, offsetof(DeflaterHuffman_t1831_StaticFields, ___staticDCodes_4), 0 } ,
	{ 29, 1296, offsetof(DeflaterHuffman_t1831_StaticFields, ___staticDLength_5), 0 } ,
	{ 30, 2389, offsetof(Inflater_t1826_StaticFields, ___CPLENS_0), 0 } ,
	{ 31, 2389, offsetof(Inflater_t1826_StaticFields, ___CPLEXT_1), 0 } ,
	{ 32, 2389, offsetof(Inflater_t1826_StaticFields, ___CPDIST_2), 0 } ,
	{ 33, 2389, offsetof(Inflater_t1826_StaticFields, ___CPDEXT_3), 0 } ,
	{ 34, 273, offsetof(Inflater_t1826, ___mode_4), 0 } ,
	{ 35, 273, offsetof(Inflater_t1826, ___readAdler_5), 0 } ,
	{ 36, 273, offsetof(Inflater_t1826, ___neededBits_6), 0 } ,
	{ 37, 273, offsetof(Inflater_t1826, ___repLength_7), 0 } ,
	{ 38, 273, offsetof(Inflater_t1826, ___repDist_8), 0 } ,
	{ 39, 273, offsetof(Inflater_t1826, ___uncomprLen_9), 0 } ,
	{ 40, 288, offsetof(Inflater_t1826, ___isLastBlock_10), 0 } ,
	{ 41, 1657, offsetof(Inflater_t1826, ___totalOut_11), 0 } ,
	{ 42, 1657, offsetof(Inflater_t1826, ___totalIn_12), 0 } ,
	{ 43, 288, offsetof(Inflater_t1826, ___noHeader_13), 0 } ,
	{ 44, 4197, offsetof(Inflater_t1826, ___input_14), 0 } ,
	{ 45, 4198, offsetof(Inflater_t1826, ___outputWindow_15), 0 } ,
	{ 46, 4199, offsetof(Inflater_t1826, ___dynHeader_16), 0 } ,
	{ 47, 4200, offsetof(Inflater_t1826, ___litlenTree_17), 0 } ,
	{ 48, 4200, offsetof(Inflater_t1826, ___distTree_18), 0 } ,
	{ 49, 4201, offsetof(Inflater_t1826, ___adler_19), 0 } ,
	{ 50, 2389, offsetof(InflaterDynHeader_t1832_StaticFields, ___repMin_0), 0 } ,
	{ 51, 2389, offsetof(InflaterDynHeader_t1832_StaticFields, ___repBits_1), 0 } ,
	{ 24, 2389, offsetof(InflaterDynHeader_t1832_StaticFields, ___BL_ORDER_2), 0 } ,
	{ 52, 560, offsetof(InflaterDynHeader_t1832, ___blLens_3), 0 } ,
	{ 53, 560, offsetof(InflaterDynHeader_t1832, ___litdistLens_4), 0 } ,
	{ 54, 4200, offsetof(InflaterDynHeader_t1832, ___blTree_5), 0 } ,
	{ 34, 273, offsetof(InflaterDynHeader_t1832, ___mode_6), 0 } ,
	{ 55, 273, offsetof(InflaterDynHeader_t1832, ___lnum_7), 0 } ,
	{ 56, 273, offsetof(InflaterDynHeader_t1832, ___dnum_8), 0 } ,
	{ 57, 273, offsetof(InflaterDynHeader_t1832, ___blnum_9), 0 } ,
	{ 58, 273, offsetof(InflaterDynHeader_t1832, ___num_10), 0 } ,
	{ 59, 273, offsetof(InflaterDynHeader_t1832, ___repSymbol_11), 0 } ,
	{ 60, 2401, offsetof(InflaterDynHeader_t1832, ___lastLen_12), 0 } ,
	{ 61, 273, offsetof(InflaterDynHeader_t1832, ___ptr_13), 0 } ,
	{ 62, 2354, offsetof(InflaterHuffmanTree_t1833, ___tree_0), 0 } ,
	{ 63, 4204, offsetof(InflaterHuffmanTree_t1833_StaticFields, ___defLitLenTree_1), 0 } ,
	{ 64, 4204, offsetof(InflaterHuffmanTree_t1833_StaticFields, ___defDistTree_2), 0 } ,
	{ 65, 252, offsetof(UseZip64_t1834, ___value___1) + sizeof(Object_t), 0 } ,
	{ 66, 4208, 0, 0 } ,
	{ 67, 4208, 0, 0 } ,
	{ 68, 4208, 0, 0 } ,
	{ 65, 252, offsetof(CompressionMethod_t1835, ___value___1) + sizeof(Object_t), 0 } ,
	{ 69, 4211, 0, 0 } ,
	{ 70, 4211, 0, 0 } ,
	{ 71, 4211, 0, 0 } ,
	{ 72, 4211, 0, 0 } ,
	{ 73, 4211, 0, 0 } ,
	{ 74, 1180, offsetof(ZipConstants_t1836_StaticFields, ___defaultCodePage_0), 0 } ,
	{ 65, 1697, offsetof(Known_t1837, ___value___1) + sizeof(Object_t), 0 } ,
	{ 75, 4214, 0, 0 } ,
	{ 76, 4214, 0, 0 } ,
	{ 77, 4214, 0, 0 } ,
	{ 78, 4214, 0, 0 } ,
	{ 79, 4214, 0, 0 } ,
	{ 80, 4214, 0, 0 } ,
	{ 81, 4217, offsetof(ZipEntry_t856, ___known_0), 0 } ,
	{ 82, 273, offsetof(ZipEntry_t856, ___externalFileAttributes_1), 0 } ,
	{ 83, 4218, offsetof(ZipEntry_t856, ___versionMadeBy_2), 0 } ,
	{ 84, 231, offsetof(ZipEntry_t856, ___name_3), 0 } ,
	{ 85, 2817, offsetof(ZipEntry_t856, ___size_4), 0 } ,
	{ 86, 2817, offsetof(ZipEntry_t856, ___compressedSize_5), 0 } ,
	{ 87, 4218, offsetof(ZipEntry_t856, ___versionToExtract_6), 0 } ,
	{ 88, 1493, offsetof(ZipEntry_t856, ___crc_7), 0 } ,
	{ 89, 1493, offsetof(ZipEntry_t856, ___dosTime_8), 0 } ,
	{ 90, 4219, offsetof(ZipEntry_t856, ___method_9), 0 } ,
	{ 91, 560, offsetof(ZipEntry_t856, ___extra_10), 0 } ,
	{ 92, 231, offsetof(ZipEntry_t856, ___comment_11), 0 } ,
	{ 93, 273, offsetof(ZipEntry_t856, ___flags_12), 0 } ,
	{ 94, 1657, offsetof(ZipEntry_t856, ___zipFileIndex_13), 0 } ,
	{ 95, 1657, offsetof(ZipEntry_t856, ___offset_14), 0 } ,
	{ 96, 288, offsetof(ZipEntry_t856, ___forceZip64__15), 0 } ,
	{ 97, 2401, offsetof(ZipEntry_t856, ___cryptoCheckValue__16), 0 } ,
	{ 98, 4221, offsetof(ZipEntryFactory_t1839, ___nameTransform__0), 0 } ,
	{ 99, 1653, offsetof(ZipEntryFactory_t1839, ___fixedDateTime__1), 0 } ,
	{ 100, 273, offsetof(ZipEntryFactory_t1839, ___getAttributes__2), 0 } ,
	{ 101, 273, offsetof(ZipExtraData_t1841, ___index__0), 0 } ,
	{ 102, 273, offsetof(ZipExtraData_t1841, ___readValueStart__1), 0 } ,
	{ 103, 273, offsetof(ZipExtraData_t1841, ___readValueLength__2), 0 } ,
	{ 104, 2869, offsetof(ZipExtraData_t1841, ___newEntry__3), 0 } ,
	{ 105, 560, offsetof(ZipExtraData_t1841, ___data__4), 0 } ,
	{ 106, 231, offsetof(KeysRequiredEventArgs_t1842, ___fileName_1), 0 } ,
	{ 107, 560, offsetof(KeysRequiredEventArgs_t1842, ___key_2), 0 } ,
	{ 65, 252, offsetof(HeaderTest_t1844, ___value___1) + sizeof(Object_t), 0 } ,
	{ 108, 4228, 0, 0 } ,
	{ 109, 4228, 0, 0 } ,
	{ 110, 4231, offsetof(ZipEntryEnumerator_t1846, ___array_0), 0 } ,
	{ 111, 273, offsetof(ZipEntryEnumerator_t1846, ___index_1), 0 } ,
	{ 112, 4233, offsetof(PartialInputStream_t1847, ___zipFile__2), 0 } ,
	{ 113, 1836, offsetof(PartialInputStream_t1847, ___baseStream__3), 0 } ,
	{ 114, 1657, offsetof(PartialInputStream_t1847, ___start__4), 0 } ,
	{ 115, 1657, offsetof(PartialInputStream_t1847, ___length__5), 0 } ,
	{ 116, 1657, offsetof(PartialInputStream_t1847, ___readPos__6), 0 } ,
	{ 117, 1657, offsetof(PartialInputStream_t1847, ___end__7), 0 } ,
	{ 118, 4235, offsetof(ZipFile_t855, ___KeysRequired_0), 0 } ,
	{ 119, 288, offsetof(ZipFile_t855, ___isDisposed__1), 0 } ,
	{ 120, 231, offsetof(ZipFile_t855, ___comment__2), 0 } ,
	{ 113, 1836, offsetof(ZipFile_t855, ___baseStream__3), 0 } ,
	{ 8, 288, offsetof(ZipFile_t855, ___isStreamOwner_4), 0 } ,
	{ 121, 1657, offsetof(ZipFile_t855, ___offsetOfFirstEntry_5), 0 } ,
	{ 122, 4231, offsetof(ZipFile_t855, ___entries__6), 0 } ,
	{ 107, 560, offsetof(ZipFile_t855, ___key_7), 0 } ,
	{ 123, 288, offsetof(ZipFile_t855, ___isNewArchive__8), 0 } ,
	{ 124, 4236, offsetof(ZipFile_t855, ___useZip64__9), 0 } ,
	{ 125, 2169, offsetof(ZipFile_t855, ___updates__10), 0 } ,
	{ 126, 2168, offsetof(ZipFile_t855, ___updateIndex__11), 0 } ,
	{ 127, 4237, offsetof(ZipFile_t855, ___archiveStorage__12), 0 } ,
	{ 128, 4238, offsetof(ZipFile_t855, ___updateDataSource__13), 0 } ,
	{ 129, 273, offsetof(ZipFile_t855, ___bufferSize__14), 0 } ,
	{ 130, 4239, offsetof(ZipFile_t855, ___updateEntryFactory__15), 0 } ,
	{ 131, 288, offsetof(ZipHelperStream_t1851, ___isOwner__2), 0 } ,
	{ 132, 1836, offsetof(ZipHelperStream_t1851, ___stream__3), 0 } ,
	{ 133, 2500, offsetof(ZipNameTransform_t1852_StaticFields, ___InvalidEntryChars_0), 0 } ,
	{ 134, 2500, offsetof(ZipNameTransform_t1852_StaticFields, ___InvalidEntryCharsRelaxed_1), 0 } ,
	{ 135, 4258, offsetof(U3CPrivateImplementationDetailsU3EU7B6C7CFC05U2D3661U2D46A0U2D98ABU2DFC6F81793937U7D_t1859_StaticFields, ___U24U24method0x60004bcU2D1_0), 0 } ,
	{ 136, 4259, offsetof(U3CPrivateImplementationDetailsU3EU7B6C7CFC05U2D3661U2D46A0U2D98ABU2DFC6F81793937U7D_t1859_StaticFields, ___U24U24method0x600026eU2D1_1), 0 } ,
	{ 137, 4260, offsetof(U3CPrivateImplementationDetailsU3EU7B6C7CFC05U2D3661U2D46A0U2D98ABU2DFC6F81793937U7D_t1859_StaticFields, ___U24U24method0x600026eU2D2_2), 0 } ,
	{ 138, 4261, offsetof(U3CPrivateImplementationDetailsU3EU7B6C7CFC05U2D3661U2D46A0U2D98ABU2DFC6F81793937U7D_t1859_StaticFields, ___U24U24method0x60004c0U2D1_3), 0 } ,
	{ 139, 4261, offsetof(U3CPrivateImplementationDetailsU3EU7B6C7CFC05U2D3661U2D46A0U2D98ABU2DFC6F81793937U7D_t1859_StaticFields, ___U24U24method0x60004c0U2D2_4), 0 } ,
	{ 140, 4262, offsetof(U3CPrivateImplementationDetailsU3EU7B6C7CFC05U2D3661U2D46A0U2D98ABU2DFC6F81793937U7D_t1859_StaticFields, ___U24U24method0x60004c0U2D3_5), 0 } ,
	{ 141, 4262, offsetof(U3CPrivateImplementationDetailsU3EU7B6C7CFC05U2D3661U2D46A0U2D98ABU2DFC6F81793937U7D_t1859_StaticFields, ___U24U24method0x60004c0U2D4_6), 0 } ,
	{ 142, 4263, offsetof(U3CPrivateImplementationDetailsU3EU7B6C7CFC05U2D3661U2D46A0U2D98ABU2DFC6F81793937U7D_t1859_StaticFields, ___U24U24method0x60004c1U2D1_7), 0 } ,
	{ 143, 4263, offsetof(U3CPrivateImplementationDetailsU3EU7B6C7CFC05U2D3661U2D46A0U2D98ABU2DFC6F81793937U7D_t1859_StaticFields, ___U24U24method0x60004c1U2D2_8), 0 } ,
	{ 144, 4259, offsetof(U3CPrivateImplementationDetailsU3EU7B6C7CFC05U2D3661U2D46A0U2D98ABU2DFC6F81793937U7D_t1859_StaticFields, ___U24U24method0x60004c1U2D3_9), 0 } ,
};
#ifdef __clang__
#pragma clang diagnostic pop
#endif
static const Il2CppFieldDefaultValue s_DefaultValues[26] = 
{
	{ 68, 5, 0 },
	{ 69, 5, 4 },
	{ 70, 5, 8 },
	{ 72, 5, 12 },
	{ 73, 5, 16 },
	{ 74, 5, 20 },
	{ 75, 5, 24 },
	{ 76, 5, 28 },
	{ 79, 559, 32 },
	{ 80, 559, 33 },
	{ 81, 559, 34 },
	{ 82, 559, 35 },
	{ 83, 559, 36 },
	{ 84, 559, 37 },
	{ 113, 5, 38 },
	{ 114, 5, 42 },
	{ 143, 4246, 46 },
	{ 144, 4250, 1070 },
	{ 145, 4252, 1146 },
	{ 146, 4254, 1162 },
	{ 147, 4254, 1278 },
	{ 148, 4256, 1394 },
	{ 149, 4256, 1514 },
	{ 150, 4248, 1634 },
	{ 151, 4248, 1646 },
	{ 152, 4250, 1658 },
};
static const uint8_t s_DefaultValueDataTable[1734] = 
{
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x0B,
	0x00,
	0x00,
	0x00,
	0x63,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x02,
	0x04,
	0x08,
	0x10,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x96,
	0x30,
	0x07,
	0x77,
	0x2C,
	0x61,
	0x0E,
	0xEE,
	0xBA,
	0x51,
	0x09,
	0x99,
	0x19,
	0xC4,
	0x6D,
	0x07,
	0x8F,
	0xF4,
	0x6A,
	0x70,
	0x35,
	0xA5,
	0x63,
	0xE9,
	0xA3,
	0x95,
	0x64,
	0x9E,
	0x32,
	0x88,
	0xDB,
	0x0E,
	0xA4,
	0xB8,
	0xDC,
	0x79,
	0x1E,
	0xE9,
	0xD5,
	0xE0,
	0x88,
	0xD9,
	0xD2,
	0x97,
	0x2B,
	0x4C,
	0xB6,
	0x09,
	0xBD,
	0x7C,
	0xB1,
	0x7E,
	0x07,
	0x2D,
	0xB8,
	0xE7,
	0x91,
	0x1D,
	0xBF,
	0x90,
	0x64,
	0x10,
	0xB7,
	0x1D,
	0xF2,
	0x20,
	0xB0,
	0x6A,
	0x48,
	0x71,
	0xB9,
	0xF3,
	0xDE,
	0x41,
	0xBE,
	0x84,
	0x7D,
	0xD4,
	0xDA,
	0x1A,
	0xEB,
	0xE4,
	0xDD,
	0x6D,
	0x51,
	0xB5,
	0xD4,
	0xF4,
	0xC7,
	0x85,
	0xD3,
	0x83,
	0x56,
	0x98,
	0x6C,
	0x13,
	0xC0,
	0xA8,
	0x6B,
	0x64,
	0x7A,
	0xF9,
	0x62,
	0xFD,
	0xEC,
	0xC9,
	0x65,
	0x8A,
	0x4F,
	0x5C,
	0x01,
	0x14,
	0xD9,
	0x6C,
	0x06,
	0x63,
	0x63,
	0x3D,
	0x0F,
	0xFA,
	0xF5,
	0x0D,
	0x08,
	0x8D,
	0xC8,
	0x20,
	0x6E,
	0x3B,
	0x5E,
	0x10,
	0x69,
	0x4C,
	0xE4,
	0x41,
	0x60,
	0xD5,
	0x72,
	0x71,
	0x67,
	0xA2,
	0xD1,
	0xE4,
	0x03,
	0x3C,
	0x47,
	0xD4,
	0x04,
	0x4B,
	0xFD,
	0x85,
	0x0D,
	0xD2,
	0x6B,
	0xB5,
	0x0A,
	0xA5,
	0xFA,
	0xA8,
	0xB5,
	0x35,
	0x6C,
	0x98,
	0xB2,
	0x42,
	0xD6,
	0xC9,
	0xBB,
	0xDB,
	0x40,
	0xF9,
	0xBC,
	0xAC,
	0xE3,
	0x6C,
	0xD8,
	0x32,
	0x75,
	0x5C,
	0xDF,
	0x45,
	0xCF,
	0x0D,
	0xD6,
	0xDC,
	0x59,
	0x3D,
	0xD1,
	0xAB,
	0xAC,
	0x30,
	0xD9,
	0x26,
	0x3A,
	0x00,
	0xDE,
	0x51,
	0x80,
	0x51,
	0xD7,
	0xC8,
	0x16,
	0x61,
	0xD0,
	0xBF,
	0xB5,
	0xF4,
	0xB4,
	0x21,
	0x23,
	0xC4,
	0xB3,
	0x56,
	0x99,
	0x95,
	0xBA,
	0xCF,
	0x0F,
	0xA5,
	0xBD,
	0xB8,
	0x9E,
	0xB8,
	0x02,
	0x28,
	0x08,
	0x88,
	0x05,
	0x5F,
	0xB2,
	0xD9,
	0x0C,
	0xC6,
	0x24,
	0xE9,
	0x0B,
	0xB1,
	0x87,
	0x7C,
	0x6F,
	0x2F,
	0x11,
	0x4C,
	0x68,
	0x58,
	0xAB,
	0x1D,
	0x61,
	0xC1,
	0x3D,
	0x2D,
	0x66,
	0xB6,
	0x90,
	0x41,
	0xDC,
	0x76,
	0x06,
	0x71,
	0xDB,
	0x01,
	0xBC,
	0x20,
	0xD2,
	0x98,
	0x2A,
	0x10,
	0xD5,
	0xEF,
	0x89,
	0x85,
	0xB1,
	0x71,
	0x1F,
	0xB5,
	0xB6,
	0x06,
	0xA5,
	0xE4,
	0xBF,
	0x9F,
	0x33,
	0xD4,
	0xB8,
	0xE8,
	0xA2,
	0xC9,
	0x07,
	0x78,
	0x34,
	0xF9,
	0x00,
	0x0F,
	0x8E,
	0xA8,
	0x09,
	0x96,
	0x18,
	0x98,
	0x0E,
	0xE1,
	0xBB,
	0x0D,
	0x6A,
	0x7F,
	0x2D,
	0x3D,
	0x6D,
	0x08,
	0x97,
	0x6C,
	0x64,
	0x91,
	0x01,
	0x5C,
	0x63,
	0xE6,
	0xF4,
	0x51,
	0x6B,
	0x6B,
	0x62,
	0x61,
	0x6C,
	0x1C,
	0xD8,
	0x30,
	0x65,
	0x85,
	0x4E,
	0x00,
	0x62,
	0xF2,
	0xED,
	0x95,
	0x06,
	0x6C,
	0x7B,
	0xA5,
	0x01,
	0x1B,
	0xC1,
	0xF4,
	0x08,
	0x82,
	0x57,
	0xC4,
	0x0F,
	0xF5,
	0xC6,
	0xD9,
	0xB0,
	0x65,
	0x50,
	0xE9,
	0xB7,
	0x12,
	0xEA,
	0xB8,
	0xBE,
	0x8B,
	0x7C,
	0x88,
	0xB9,
	0xFC,
	0xDF,
	0x1D,
	0xDD,
	0x62,
	0x49,
	0x2D,
	0xDA,
	0x15,
	0xF3,
	0x7C,
	0xD3,
	0x8C,
	0x65,
	0x4C,
	0xD4,
	0xFB,
	0x58,
	0x61,
	0xB2,
	0x4D,
	0xCE,
	0x51,
	0xB5,
	0x3A,
	0x74,
	0x00,
	0xBC,
	0xA3,
	0xE2,
	0x30,
	0xBB,
	0xD4,
	0x41,
	0xA5,
	0xDF,
	0x4A,
	0xD7,
	0x95,
	0xD8,
	0x3D,
	0x6D,
	0xC4,
	0xD1,
	0xA4,
	0xFB,
	0xF4,
	0xD6,
	0xD3,
	0x6A,
	0xE9,
	0x69,
	0x43,
	0xFC,
	0xD9,
	0x6E,
	0x34,
	0x46,
	0x88,
	0x67,
	0xAD,
	0xD0,
	0xB8,
	0x60,
	0xDA,
	0x73,
	0x2D,
	0x04,
	0x44,
	0xE5,
	0x1D,
	0x03,
	0x33,
	0x5F,
	0x4C,
	0x0A,
	0xAA,
	0xC9,
	0x7C,
	0x0D,
	0xDD,
	0x3C,
	0x71,
	0x05,
	0x50,
	0xAA,
	0x41,
	0x02,
	0x27,
	0x10,
	0x10,
	0x0B,
	0xBE,
	0x86,
	0x20,
	0x0C,
	0xC9,
	0x25,
	0xB5,
	0x68,
	0x57,
	0xB3,
	0x85,
	0x6F,
	0x20,
	0x09,
	0xD4,
	0x66,
	0xB9,
	0x9F,
	0xE4,
	0x61,
	0xCE,
	0x0E,
	0xF9,
	0xDE,
	0x5E,
	0x98,
	0xC9,
	0xD9,
	0x29,
	0x22,
	0x98,
	0xD0,
	0xB0,
	0xB4,
	0xA8,
	0xD7,
	0xC7,
	0x17,
	0x3D,
	0xB3,
	0x59,
	0x81,
	0x0D,
	0xB4,
	0x2E,
	0x3B,
	0x5C,
	0xBD,
	0xB7,
	0xAD,
	0x6C,
	0xBA,
	0xC0,
	0x20,
	0x83,
	0xB8,
	0xED,
	0xB6,
	0xB3,
	0xBF,
	0x9A,
	0x0C,
	0xE2,
	0xB6,
	0x03,
	0x9A,
	0xD2,
	0xB1,
	0x74,
	0x39,
	0x47,
	0xD5,
	0xEA,
	0xAF,
	0x77,
	0xD2,
	0x9D,
	0x15,
	0x26,
	0xDB,
	0x04,
	0x83,
	0x16,
	0xDC,
	0x73,
	0x12,
	0x0B,
	0x63,
	0xE3,
	0x84,
	0x3B,
	0x64,
	0x94,
	0x3E,
	0x6A,
	0x6D,
	0x0D,
	0xA8,
	0x5A,
	0x6A,
	0x7A,
	0x0B,
	0xCF,
	0x0E,
	0xE4,
	0x9D,
	0xFF,
	0x09,
	0x93,
	0x27,
	0xAE,
	0x00,
	0x0A,
	0xB1,
	0x9E,
	0x07,
	0x7D,
	0x44,
	0x93,
	0x0F,
	0xF0,
	0xD2,
	0xA3,
	0x08,
	0x87,
	0x68,
	0xF2,
	0x01,
	0x1E,
	0xFE,
	0xC2,
	0x06,
	0x69,
	0x5D,
	0x57,
	0x62,
	0xF7,
	0xCB,
	0x67,
	0x65,
	0x80,
	0x71,
	0x36,
	0x6C,
	0x19,
	0xE7,
	0x06,
	0x6B,
	0x6E,
	0x76,
	0x1B,
	0xD4,
	0xFE,
	0xE0,
	0x2B,
	0xD3,
	0x89,
	0x5A,
	0x7A,
	0xDA,
	0x10,
	0xCC,
	0x4A,
	0xDD,
	0x67,
	0x6F,
	0xDF,
	0xB9,
	0xF9,
	0xF9,
	0xEF,
	0xBE,
	0x8E,
	0x43,
	0xBE,
	0xB7,
	0x17,
	0xD5,
	0x8E,
	0xB0,
	0x60,
	0xE8,
	0xA3,
	0xD6,
	0xD6,
	0x7E,
	0x93,
	0xD1,
	0xA1,
	0xC4,
	0xC2,
	0xD8,
	0x38,
	0x52,
	0xF2,
	0xDF,
	0x4F,
	0xF1,
	0x67,
	0xBB,
	0xD1,
	0x67,
	0x57,
	0xBC,
	0xA6,
	0xDD,
	0x06,
	0xB5,
	0x3F,
	0x4B,
	0x36,
	0xB2,
	0x48,
	0xDA,
	0x2B,
	0x0D,
	0xD8,
	0x4C,
	0x1B,
	0x0A,
	0xAF,
	0xF6,
	0x4A,
	0x03,
	0x36,
	0x60,
	0x7A,
	0x04,
	0x41,
	0xC3,
	0xEF,
	0x60,
	0xDF,
	0x55,
	0xDF,
	0x67,
	0xA8,
	0xEF,
	0x8E,
	0x6E,
	0x31,
	0x79,
	0xBE,
	0x69,
	0x46,
	0x8C,
	0xB3,
	0x61,
	0xCB,
	0x1A,
	0x83,
	0x66,
	0xBC,
	0xA0,
	0xD2,
	0x6F,
	0x25,
	0x36,
	0xE2,
	0x68,
	0x52,
	0x95,
	0x77,
	0x0C,
	0xCC,
	0x03,
	0x47,
	0x0B,
	0xBB,
	0xB9,
	0x16,
	0x02,
	0x22,
	0x2F,
	0x26,
	0x05,
	0x55,
	0xBE,
	0x3B,
	0xBA,
	0xC5,
	0x28,
	0x0B,
	0xBD,
	0xB2,
	0x92,
	0x5A,
	0xB4,
	0x2B,
	0x04,
	0x6A,
	0xB3,
	0x5C,
	0xA7,
	0xFF,
	0xD7,
	0xC2,
	0x31,
	0xCF,
	0xD0,
	0xB5,
	0x8B,
	0x9E,
	0xD9,
	0x2C,
	0x1D,
	0xAE,
	0xDE,
	0x5B,
	0xB0,
	0xC2,
	0x64,
	0x9B,
	0x26,
	0xF2,
	0x63,
	0xEC,
	0x9C,
	0xA3,
	0x6A,
	0x75,
	0x0A,
	0x93,
	0x6D,
	0x02,
	0xA9,
	0x06,
	0x09,
	0x9C,
	0x3F,
	0x36,
	0x0E,
	0xEB,
	0x85,
	0x67,
	0x07,
	0x72,
	0x13,
	0x57,
	0x00,
	0x05,
	0x82,
	0x4A,
	0xBF,
	0x95,
	0x14,
	0x7A,
	0xB8,
	0xE2,
	0xAE,
	0x2B,
	0xB1,
	0x7B,
	0x38,
	0x1B,
	0xB6,
	0x0C,
	0x9B,
	0x8E,
	0xD2,
	0x92,
	0x0D,
	0xBE,
	0xD5,
	0xE5,
	0xB7,
	0xEF,
	0xDC,
	0x7C,
	0x21,
	0xDF,
	0xDB,
	0x0B,
	0xD4,
	0xD2,
	0xD3,
	0x86,
	0x42,
	0xE2,
	0xD4,
	0xF1,
	0xF8,
	0xB3,
	0xDD,
	0x68,
	0x6E,
	0x83,
	0xDA,
	0x1F,
	0xCD,
	0x16,
	0xBE,
	0x81,
	0x5B,
	0x26,
	0xB9,
	0xF6,
	0xE1,
	0x77,
	0xB0,
	0x6F,
	0x77,
	0x47,
	0xB7,
	0x18,
	0xE6,
	0x5A,
	0x08,
	0x88,
	0x70,
	0x6A,
	0x0F,
	0xFF,
	0xCA,
	0x3B,
	0x06,
	0x66,
	0x5C,
	0x0B,
	0x01,
	0x11,
	0xFF,
	0x9E,
	0x65,
	0x8F,
	0x69,
	0xAE,
	0x62,
	0xF8,
	0xD3,
	0xFF,
	0x6B,
	0x61,
	0x45,
	0xCF,
	0x6C,
	0x16,
	0x78,
	0xE2,
	0x0A,
	0xA0,
	0xEE,
	0xD2,
	0x0D,
	0xD7,
	0x54,
	0x83,
	0x04,
	0x4E,
	0xC2,
	0xB3,
	0x03,
	0x39,
	0x61,
	0x26,
	0x67,
	0xA7,
	0xF7,
	0x16,
	0x60,
	0xD0,
	0x4D,
	0x47,
	0x69,
	0x49,
	0xDB,
	0x77,
	0x6E,
	0x3E,
	0x4A,
	0x6A,
	0xD1,
	0xAE,
	0xDC,
	0x5A,
	0xD6,
	0xD9,
	0x66,
	0x0B,
	0xDF,
	0x40,
	0xF0,
	0x3B,
	0xD8,
	0x37,
	0x53,
	0xAE,
	0xBC,
	0xA9,
	0xC5,
	0x9E,
	0xBB,
	0xDE,
	0x7F,
	0xCF,
	0xB2,
	0x47,
	0xE9,
	0xFF,
	0xB5,
	0x30,
	0x1C,
	0xF2,
	0xBD,
	0xBD,
	0x8A,
	0xC2,
	0xBA,
	0xCA,
	0x30,
	0x93,
	0xB3,
	0x53,
	0xA6,
	0xA3,
	0xB4,
	0x24,
	0x05,
	0x36,
	0xD0,
	0xBA,
	0x93,
	0x06,
	0xD7,
	0xCD,
	0x29,
	0x57,
	0xDE,
	0x54,
	0xBF,
	0x67,
	0xD9,
	0x23,
	0x2E,
	0x7A,
	0x66,
	0xB3,
	0xB8,
	0x4A,
	0x61,
	0xC4,
	0x02,
	0x1B,
	0x68,
	0x5D,
	0x94,
	0x2B,
	0x6F,
	0x2A,
	0x37,
	0xBE,
	0x0B,
	0xB4,
	0xA1,
	0x8E,
	0x0C,
	0xC3,
	0x1B,
	0xDF,
	0x05,
	0x5A,
	0x8D,
	0xEF,
	0x02,
	0x2D,
	0x10,
	0x00,
	0x00,
	0x00,
	0x11,
	0x00,
	0x00,
	0x00,
	0x12,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x0B,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x0C,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x0D,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x0F,
	0x00,
	0x00,
	0x00,
	0x00,
	0x08,
	0x04,
	0x0C,
	0x02,
	0x0A,
	0x06,
	0x0E,
	0x01,
	0x09,
	0x05,
	0x0D,
	0x03,
	0x0B,
	0x07,
	0x0F,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x0B,
	0x00,
	0x00,
	0x00,
	0x0D,
	0x00,
	0x00,
	0x00,
	0x0F,
	0x00,
	0x00,
	0x00,
	0x11,
	0x00,
	0x00,
	0x00,
	0x13,
	0x00,
	0x00,
	0x00,
	0x17,
	0x00,
	0x00,
	0x00,
	0x1B,
	0x00,
	0x00,
	0x00,
	0x1F,
	0x00,
	0x00,
	0x00,
	0x23,
	0x00,
	0x00,
	0x00,
	0x2B,
	0x00,
	0x00,
	0x00,
	0x33,
	0x00,
	0x00,
	0x00,
	0x3B,
	0x00,
	0x00,
	0x00,
	0x43,
	0x00,
	0x00,
	0x00,
	0x53,
	0x00,
	0x00,
	0x00,
	0x63,
	0x00,
	0x00,
	0x00,
	0x73,
	0x00,
	0x00,
	0x00,
	0x83,
	0x00,
	0x00,
	0x00,
	0xA3,
	0x00,
	0x00,
	0x00,
	0xC3,
	0x00,
	0x00,
	0x00,
	0xE3,
	0x00,
	0x00,
	0x00,
	0x02,
	0x01,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x0D,
	0x00,
	0x00,
	0x00,
	0x11,
	0x00,
	0x00,
	0x00,
	0x19,
	0x00,
	0x00,
	0x00,
	0x21,
	0x00,
	0x00,
	0x00,
	0x31,
	0x00,
	0x00,
	0x00,
	0x41,
	0x00,
	0x00,
	0x00,
	0x61,
	0x00,
	0x00,
	0x00,
	0x81,
	0x00,
	0x00,
	0x00,
	0xC1,
	0x00,
	0x00,
	0x00,
	0x01,
	0x01,
	0x00,
	0x00,
	0x81,
	0x01,
	0x00,
	0x00,
	0x01,
	0x02,
	0x00,
	0x00,
	0x01,
	0x03,
	0x00,
	0x00,
	0x01,
	0x04,
	0x00,
	0x00,
	0x01,
	0x06,
	0x00,
	0x00,
	0x01,
	0x08,
	0x00,
	0x00,
	0x01,
	0x0C,
	0x00,
	0x00,
	0x01,
	0x10,
	0x00,
	0x00,
	0x01,
	0x18,
	0x00,
	0x00,
	0x01,
	0x20,
	0x00,
	0x00,
	0x01,
	0x30,
	0x00,
	0x00,
	0x01,
	0x40,
	0x00,
	0x00,
	0x01,
	0x60,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x0B,
	0x00,
	0x00,
	0x00,
	0x0B,
	0x00,
	0x00,
	0x00,
	0x0C,
	0x00,
	0x00,
	0x00,
	0x0C,
	0x00,
	0x00,
	0x00,
	0x0D,
	0x00,
	0x00,
	0x00,
	0x0D,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x0B,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x11,
	0x00,
	0x00,
	0x00,
	0x12,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x0B,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x0C,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x0D,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x0F,
	0x00,
	0x00,
	0x00,
};
Il2CppImage g_ICSharpCode_SharpZipLib_dll_Image = 
{
	 "ICSharpCode.SharpZipLib.dll" ,
	&g_ICSharpCode_SharpZipLib_Assembly,
	g_ICSharpCode_SharpZipLib_Assembly_Types,
	46,
	NULL,
	s_StringTable,
	145,
	s_FieldTable,
	153,
	s_DefaultValues,
	26,
	s_DefaultValueDataTable,
	1734,
	6,
	NULL,
	g_ICSharpCode_SharpZipLib_Assembly_AttributeGenerators,
};
